#激活项目的profile
spring.profiles.active=forward
name=xialiroot
my.number.in.range=${random.int[1,100]}
#日志默认级别为info 此处修改日志级别为debug
debug=false
spring.mvc.message-codes-resolver.format.PREFIX_ERROR_CODE=wang

#spring.mvc.static-path-pattern=/config/**
#spring.resources.static-locations=classpath:/other/

#web监听的地址
server.address=
#web监听的端口号
server.port=

#配置数据库连接信息  默认使用下面的配置,下面的配置和具体的数据库无关
#如果不配置url spring-boot会使用内置数据库
#当没有显示指定dataSource而spring boot根据依赖的jar认为需要使用连接信息时，默认使用下列配置，若无，则报错
#spring.datasource.url=jdbc:mysql://192.168.72.1/mavenpractice
#spring.datasource.username=mavenpractice
#spring.datasource.password=mavenpractice
#spring.datasource.driver-class-name=com.mysql.jdbc.Driver

#配置定制化数据库连接信息  使用方式：@ConfigurationProperties(prefix = "druid.datasource")
druid.datasource.url=jdbc:mysql://192.168.72.1/mavenpractice
druid.datasource.username=mavenpractice
druid.datasource.password=mavenpractice
druid.datasource.driver-class-name=com.mysql.jdbc.Driver

#配置数据库连接池信息，该配置和具体的dataSource类型无关
#app.datasource.jdbc-url=jdbc:mysql://localhost/test
#app.datasource.username=dbuser
#app.datasource.password=dbpass
#app.datasource.maximum-pool-size=30

#hibernate启动时，会根据扫描到的实体创建对应的表   此属性只针对hibernate
#spring.jpa.hibernate.ddl-auto=create

#spring.jpa.show-sql=true
#下面两个用来指定持久化所使用的dialect 如果不明确指定，则spring boot会自动指定
#spring.jpa.database
#spring.jpa.database-platform

#all properties in spring.jpa.properties.* are passed through as normal JPA properties (with the prefix stripped) when the local EntityManagerFactory is created
#spring.jpa.properties.*

#启动程序后，会根据扫描到的实体创建对于的表到数据库中  和具体的数据库及持久化技术等无关
#spring.jpa.generate-ddl=true

#用来指定加载的dataSource类型，否则会使用默认的策略加载默认的dataSource类型
#spring.datasource.type=

